@page
@model PRN231_PE_Trial_WebUI.Pages.CompanyProjectPages.EditModel
@{
    ViewData["Title"] = "Edit Company Project";
}

<h1>Edit Company Project</h1>

<!-- Display Token errors -->
@if (ViewData.ModelState.ContainsKey("Token_Error"))
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState["Token_Error"].Errors)
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}

<!-- Display Odata errors -->
@if (ViewData.ModelState.ContainsKey("Odata_Error"))
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState["Odata_Error"].Errors)
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}


<!-- Display Project Details -->
<div class="row">
    <div class="col-md-6">
        <form method="post" asp-page-handler="Update">
            @*<div class="form-group">
                <label asp-for="CompanyProject.CompanyProjectID" class="control-label"></label>
                <input asp-for="CompanyProject.CompanyProjectID" class="form-control" type="hidden" />
            </div>*@

            <input asp-for="CompanyProject.CompanyProjectID" class="form-control" type="hidden" />

            <div class="form-group">
                <label asp-for="CompanyProject.ProjectName" class="control-label"></label>
                <input asp-for="CompanyProject.ProjectName" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="CompanyProject.ProjectDescription" class="control-label"></label>
                <input asp-for="CompanyProject.ProjectDescription" class="form-control" />
            </div>

            <div class="form-group">
                <label asp-for="CompanyProject.EstimatedStartDate" class="control-label"></label>
                <input asp-for="CompanyProject.EstimatedStartDate" class="form-control" type="date" />
            </div>

            <div class="form-group">
                <label asp-for="CompanyProject.EstimatedEndDate" class="control-label"></label>
                <input asp-for="CompanyProject.EstimatedEndDate" class="form-control" type="date" />
            </div>

            <div class="form-group">
                <label class="control-label">Employees Participate In Project</label>
                <select id="selectedEmployees" asp-for="SelectedEmployeeIDs" asp-items="Model.SelectableEmployees" class="form-control">
                </select>
            </div>

            <br />

            <div id="extraFieldsContainer" class="row"></div>

            <br />

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Update Project</button>
            </div>

        </form>

        <div>
            <a asp-page="Management">Back to List</a>
        </div>

    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            // Function to generate extra fields based on the selected options
            function generateExtraFields() {
                // Clear previously generated extra fields
                $("#extraFieldsContainer").empty();

                // Get the selected options and their count from the select element
                var selectedOptions = $("#selectedEmployees").val() || [];
                var selectedOptionsCount = selectedOptions.length;

                // Retrieve the Selected employee IDs and selected start and end dates from the Razor Model
                var selectedEmployeeIds = @Html.Raw(Json.Serialize(Model.SelectedEmployeeIDs));
                var selectedStartDates = @Html.Raw(Json.Serialize(Model.SelectedEmployeesStartDates));
                var selectedEndDates = @Html.Raw(Json.Serialize(Model.SelectedEmployeesEndDates));

                // using JS computed property name to store object key:value
                // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer#Computed_property_names
                const employeeStartDates = {};
                const employeeEndDates = {};

                // loop through the selected start and end dates and store them in the object
                for (var index = 0; index < selectedEmployeeIds.length; index++) {
                    var optionIndex = selectedEmployeeIds[index];
                    employeeStartDates[optionIndex] = selectedStartDates[index];
                    employeeEndDates[optionIndex] = selectedEndDates[index];
                }

                // Generate extra fields for each selected option
                for (var index = 0; index < selectedOptionsCount; index++) {
                    var optionIndex = selectedOptions[index];
                    var optionText = $("#selectedEmployees option[value='" + optionIndex + "']").text();

                    var extraFieldsContainer = $('<div class="row"></div>');

                    var startDateField = $('<div class="form-group col">' +
                        '<label class="control-label">Start Date for ' + optionText + '</label>' +
                        '<input name="SelectedEmployeesStartDates[' + index + ']" class="form-control" type="date" />' +
                        '</div>');

                    var endDateField = $('<div class="form-group col">' +
                        '<label class="control-label">End Date for ' + optionText + '</label>' +
                        '<input name="SelectedEmployeesEndDates[' + index + ']" class="form-control" type="date" />' +
                        '</div>');

                    // Pre-populate the input fields with values from the Razor Model
                    var startDateValue = convertToDateFormat(employeeStartDates[optionIndex]) || '';
                    var endDateValue = convertToDateFormat(employeeEndDates[optionIndex]) || '';

                    startDateField.find("input").val(startDateValue);
                    endDateField.find("input").val(endDateValue);

                    extraFieldsContainer.append(startDateField);
                    extraFieldsContainer.append(endDateField);

                    $("#extraFieldsContainer").append(extraFieldsContainer);
                }
            }

            // Convert date value to the format YYYY-MM-DD
            function convertToDateFormat(dateString) {
                var date = new Date(dateString);
                var year = date.getFullYear();
                var month = ('0' + (date.getMonth() + 1)).slice(-2);
                var day = ('0' + date.getDate()).slice(-2);
                return year + '-' + month + '-' + day;
            }

            // Generate extra fields if there are pre-selected options
            generateExtraFields();

            // Attach event listener to the select element
            $("#selectedEmployees").change(function () {
                generateExtraFields();
            });
        });
    </script>
}






